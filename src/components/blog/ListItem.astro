---
import type { ImageMetadata } from 'astro';
import { Icon } from 'astro-icon/components';
import Image from '~/components/common/Image.astro';
import PostTags from '~/components/blog/Tags.astro';

import { APP_BLOG } from 'astrowind:config';
import type { Post } from '~/types';

import { getPermalink } from '~/utils/permalinks';
import { findImage } from '~/utils/images';
import { getFormattedDate } from '~/utils/utils';

export interface Props {
  post: Post;
}

const { post }:Props = Astro.props;
const image = (await findImage(post.image)) as ImageMetadata | undefined;

const link = APP_BLOG?.post?.isEnabled ? getPermalink(post.permalink, 'post') : '';
---

<article
  class={`overflow-hidden p-6 border-b-2 border-dashed border-teal-400 max-w-md mx-auto md:max-w-xl  intersect-once intersect-quarter motion-safe:md:opacity-0 motion-safe:md:intersect:animate-fade grid grid-cols-3 md:grid-cols-4 gap-3 ${ !image? "grid-cols-1": ""}`}
>
  {
    image &&
      (link ? (
        <a class="relative block group row-span-3 md:col-span-2 " href={link ?? 'javascript:void(0)'}>
          <div class="relative pb-[56.25%] md:h-20 aspect-square overflow-hidden dark:bg-slate-700 rounded-2xl">
            {image && (
              <Image
                src={image}
                class="absolute inset-0 object-cover w-full h-full mb-6 bg-gray-400 dark:bg-slate-700"
                widths={[300, 400]}
                width={400}
                sizes="(max-width: 400px) 300px, 400px"
                alt={post.title}
                aspectRatio="1:1"
                loading="lazy"
                decoding="async"
              />
            )}
          </div>
        </a>
      ) : (
        <div class="relative h-0 pb-[56.25%] overflow-hidden bg-gray-400 dark:bg-slate-700 rounded-3xl">
          {image && (
            <Image
              src={image}
              class="absolute inset-0 object-cover w-full h-full mb-6 rounded  dark:bg-slate-700"
              widths={[300, 400]}
              width={400}
              sizes="(max-width: 400px) 300px, 400px"
              alt={post.title}
              aspectRatio="1:1"
              loading="lazy"
              decoding="async"
            />
          )}
        </div>
      ))
  }
  
    <header class="row-span-2 col-span-2 flex flex-col justify-center items-center md:items-start">
      <div class="mb-3 md:mb-6 w-full">
        <p class="text-xs text-right w-full">
          <Icon name="tabler:clock" class="w-3 h-3 inline-block -mt-0.5 dark:text-gray-400" />
          <time datetime={String(post.publishDate)} class="inline-block">投稿日：{post.publishDate.getFullYear()}年{post.publishDate.getMonth()+1}月{post.publishDate.getDate()}日</time>
          {
            post.author && (
              <>
                {' '}
                · <Icon name="tabler:user" class="w-3.5 h-3.5 inline-block -mt-0.5 dark:text-gray-400" />
                <span>{post.author.replaceAll('-', ' ')}</span>
              </>
            )
          }
         
        </p>
      </div>
      <h2 class="text-start md:text-center text-lg md:text-2xl font-semibold leading-tight mb-2 font-heading dark:text-slate-600">
        {
          link ? (
            <a
              class="inline-block hover:text-primary dark:hover:text-blue-700 transition ease-in duration-200"
              href={link}
            >
              {post.title}
            </a>
          ) : (
            post.title
          )
        }
      </h2>
      {post.excerpt && <p class="flex-grow text-muted dark:text-slate-400 text-sm md:text-md">{post.excerpt}</p>}
    </header>
 <div class="text-start md:text-center mt-1 col-span-2">
    
    {
      post.tags && Array.isArray(post.tags) ? (
        <footer class="">
          <PostTags tags={post.tags} class="text-xs md:text-md flex justify-end md:justify-start pr-2 flex-wrap"/>
        </footer>
      ) : (
        <Fragment />
      )
    }
  </div>
</article>
