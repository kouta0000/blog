---
import type { ImageMetadata } from 'astro';
import { Icon } from 'astro-icon/components';
import Image from '~/components/common/Image.astro';
import PostTags from '~/components/blog/Tags.astro';
import PostExcerpt from '@igor.dvlpr/astro-post-excerpt';
import { getEntry } from 'astro:content';
import { getExcerpt } from '~/utils/utils';
import { render } from 'astro:content';



import { APP_BLOG } from 'astrowind:config';
import type { Post } from '~/types';

import { getPermalink } from '~/utils/permalinks';
import { findImage } from '~/utils/images';
import { getFormattedDate } from '~/utils/utils';
import { prototypejs } from 'globals';

export interface Props {
  post: Post;
  index:number;
  excerptnumber?:number;
}

const { post,index,excerptnumber }:Props = Astro.props;
const image = ((await findImage(post.image)) || (await findImage('~/assets/images/desert.jpg'))) as ImageMetadata | undefined;

const link = APP_BLOG?.post?.isEnabled ? getPermalink(post.permalink, 'post') : '';
const excerpt = await getExcerpt(excerptnumber ?? 0, post.id);
const icons = ['tabler:flame','tabler:droplet','tabler:droplets','tabler:fountain','tabler:feather-filled','tabler:filters-filled',
'tabler:temperature-sun','tabler:battery-3','tabler:campfire-filled','tabler:directions']
const random = Math.floor(Math.random()*10);
---

<article
  class={`relative p-8 overflow-hidden w-full md:max-w-xl mx-auto intersect-once intersect-quarter motion-safe:md:opacity-0 motion-safe:md:intersect:animate-fade flex flex-col items-center gap-5`}
> 
      
 
    <header class="flex flex-col gap-3 justify-between items-center w-full mx-auto">
      <div class="w-full mb-2 flex justify-between">
        <p class=""><Icon name={icons[(index+random)%icons.length]} class="size-6 text-teal-400 inline-block -mt-0.5 dark:text-gray-400" /></p>
        <p class="text-sm text-muted text-right whitespace-nowrap">
          <Icon name="tabler:clock-filled" class="w-3 h-3 inline-block -mt-0.5 dark:text-gray-400" />
          <time datetime={String(post.publishDate)} class="inline-block">{post.publishDate.getFullYear()}年{post.publishDate.getMonth()+1}月{post.publishDate.getDate()}日</time>
          {
            post.category && (
              <>
                {' '}
                · <Icon name="tabler:brand-telegram" class="w-3.5 h-3.5 inline-block -mt-0.5 dark:text-gray-400" />
                <a class="underline underline-offset-2 text-teal-600 hover:text-blue-500/90" href={getPermalink(post.category.slug, 'category')}>{post.category.title}</a>
              </>
            )
          }
         
        </p>
      </div>
      <h2 class="grow text-start md:text-center text-2xl md:text-3xl font-semibold leading-tight font-heading dark:text-slate-600 flex items-center">
        {
          link ? (
            <a
              class="inline-block hover:text-primary dark:hover:text-blue-700 transition ease-in duration-200"
              href={link}
            >
              {post.title}
            </a>
          ) : (
            post.title
          )
        }
      </h2>
     
    </header>
    <footer class=" dark:text-slate-400 text-xs sm:text-sm md:text-md text-gray-500">
      <a href={link} class="">{excerpt!=='...' ? excerpt:''}</a>
    </footer>
    
</article>




