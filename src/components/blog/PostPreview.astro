---
import type { CollectionEntry } from "astro:content";
import FormattedDate from "@/components/FormattedDate.astro";
import type { HTMLTag, Polymorphic } from "astro/types";
import { Icon } from "astro-icon/components";
import Badge from "../Badge.astro";
import { render } from "astro:content";
type Props<Tag extends HTMLTag = 'div'> = Polymorphic<{ as: Tag }> & {
	post: CollectionEntry<"post">;
	withDesc?: boolean;
	progress?:number
};
const icons: { [key: string]: string } = {
	french:'flag-france', german:'flag-germany', japanese1:'flag-japan', english1:'flag-united-kingdom', english2:'flag-united-states', russian:'flag-russia', japanese2:'japanese-dolls', program:'globe-with-meridians' 
}

const { as: Tag = "div", post, withDesc = false, progress } = Astro.props;
const today = new Date();
const jstDate = new Date(today.getTime() + 9 * 60 * 60 * 1000);
const isNew = post.data.publishDate.getFullYear() === jstDate.getFullYear() && post.data.publishDate.getMonth() === jstDate.getMonth() && (jstDate.getDate() - post.data.publishDate.getDate()) <= 7;
const { Content } = await render(post)
---

<div class={withDesc ? "flex flex-col" : "flex flex-col grow"}>
	{!withDesc ? (
		<>
			<div class="flex items-center gap-2">
				<Icon name="solar:alarm-broken" class="size-5 text-accent-base/60" />
				<FormattedDate
					class="shrink-0 text-light text-sm sm:order-2 "
					date={post.data.updatedDate ? post.data.updatedDate: post.data.publishDate}
					dateTimeOptions={{
						// hour: "2-digit",
						// minute: "2-digit",
						year: "numeric",
						month: "long",
						day: "2-digit",
					}}
					/>
					{ isNew && (
						<span class="rounded-full border border-pink-400 text-pink-400 bg-pink-200/10 px-2 py-0.5 text-xs">New</span>
						)}
					{post.data.updatedDate && (
						<span class="rounded-full border border-teal-400 text-teal-400 bg-teal-200/10 px-2 py-0.5 text-xs">Updated</span>
						)}
				</div>
			<Tag class="citrus-link text-md py-4  md:line-clamp-1 md:pl-16 md:py-8 md:text-xl font-semibold">
				<a data-astro-prefetch href={`/posts/${post.id}/`} class="inline-flex items-center gap-6">
					{post.data.draft && <span class="text-red-500">(Draft) </span>}
					{post.data.title}
				</a>
			</Tag>
			<div class="prose mt-1 mb-4 text-light relative  hover:text-blue-500/80">
				<a data-astro-prefetch href={`/posts/${post.id}/`} class="absolute inset-0 z-10"></a>
			{post.body?.slice(0,200)}
			</div>
		</>
	) : (
		<>
		<div class="flex items-center gap-2">
				<Icon name="solar:alarm-broken" class="size-5 text-accent-base/60" />
				<FormattedDate
					class="shrink-0 text-lighter text-sm"
					date={post.data.publishDate}
					dateTimeOptions={{
						// hour: "2-digit",
						// minute: "2-digit",
						year: "numeric",
						month: "long",
						day: "2-digit",
					}}
					/>
					
					{ isNew && (
						<span class="rounded-full border border-pink-500 text-pink-500 bg-pink-200/10 px-2 py-0.5 text-xs">New</span>
						)}
					{post.data.updatedDate && (
						<span class="rounded-full border border-teal-500 text-teal-500 bg-teal-200/10 px-2 py-0.5 text-xs">Updated</span>
						)}
				</div>
			<Tag class="citrus-link mt-4 mb-1 pl-3 text-md">
				<a data-astro-prefetch href={`/posts/${post.id}/`} class="inline-flex items-center gap-6">
					<Icon name={post.data.icon && post.data.icon.length !== 0 ? `twemoji:${icons[post.data.icon as string]}`:"mdi:note"} class="size-6 opacity-70" />
					{post.data.title +'　　'+post.data.description}
				</a>
				
			</Tag>
			<p class="my-1 line-clamp-2 pl-5"></p>
			<div class="prose mb-1 relative text-light hover:text-blue-500/80">
				<a data-astro-prefetch href={`/posts/${post.id}/`} class="absolute inset-0 z-10"></a>
			{post.body?.slice(0,200)}
			</div>
			<div class="py-4 flex px-5 flex gap-3 flex-wrap">
				{
					post.data.tags?.length ? (
						
						<>
						{post.data.tags.map((tag) => (
							<a aria-label={`View all posts with the tag: ${tag}`} href={`/tags/${tag}`} class="opacity-70 whitespace-nowrap">
								<Badge variant="outline"  title={tag} />
							</a>
						))}
						</>
						) : (
							<Icon aria-hidden="true" class="flex-shrink-0 inline-block h-5 w-5 text-lightest" focusable="false" name="mingcute:hashtag-fill" />
							<span class="text-sm text-lightest">No tags</span>
							)
						}
			</div>
		</>
	)}
</div>
<script is:inline data-astro-reload>
	import { Observer } from 'tailwindcss-intersect';
	Observer.start();
</script>

