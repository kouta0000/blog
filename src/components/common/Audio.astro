---
import { findImage } from '~/utils/images';
import { Icon } from 'astro-icon/components';
interface Props {
    color?: string;
    src?: string;
    text?: string;
}
const {text, color, src } = Astro.props;
const imagepath = await findImage(src);
const id = Math.floor(Math.random()*100);
---
{ src ? (
    <audio id={`${id}`}>
        <source src={src} type="audio/mpeg" />
    </audio>
        <span class="flex items-center gap-2 inline align-baseline whitespace-nowrap">
            <span>{text}</span>
        <span onclick="handleClick()" class={color ? `text-${color}-600 my-auto `: "text-rose-600 my-auto"}>
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="currentColor" class="size-5 md:size-6 cursor-pointer">
                <path fill-rule="evenodd" d="M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14Zm-.847-9.766A.75.75 0 0 0 6 5.866v4.268a.75.75 0 0 0 1.153.633l3.353-2.134a.75.75 0 0 0 0-1.266L7.153 5.234Z" clip-rule="evenodd" />
            </svg>
        </span>
        <a href={src} download="sound_file_koan.mp3"><Icon name="tabler:cloud-down" class="size-5 md:size-6" /></a>
        </span>
    ):(
        <p>音声ファイルがありません</p>
    )
}

<script lang='ts'>
    
    const handleClick = async () => {
        const audio = document.getElementById(`${id}`);
        audio.play();
    };

</script>


