---
import Search from "@/components/Search.astro";
import ThemeToggle from "@/components/ThemeToggle.astro";
import { siteConfig, menuLinks } from "@/site.config";
import { Icon } from "astro-icon/components";
import ColorPalet from '../blog/ColorPalet.svelte'
---

<header
	id="main-header"
	class="fixed px-4 md:px-0 inset-x-0 z-20 flex items-center md:relative top-0 h-16 bg-bgColor md:bg-transparent w-full"
>	
	
	
	<div class="w-full sm:flex-col">
		<div class="flex items-center justify-between">
			<a
				aria-label={siteConfig.title}
				aria-current={Astro.url.pathname === "/" ? "page" : false}
				class="group flex h-8 items-center hover:filter-none sm:relative"
				href="/"
			>	
				
				<div title={siteConfig.title}>
					<Icon name="mingcute:fish-line" class="text-accent-one size-6" />
				</div>
				
				<strong class="'max-[320px]:hidden' bg-clip-text text-transparent bg-gradient-to-r from-accent-base/80 to-accent-one hidden xs:block z-10 mb-0.5 ml-1 text-2xl group-hover:text-accent-one">
					{siteConfig.title}
				</strong>
			</a>
			<nav
				aria-label="Main menu"
				class="top-20 text-sm mx-auto ml-4 ml-auto hidden flex-col items-end justify-center gap-x-4 rounded-md bg-bgColor font-medium text-accent-two shadow backdrop-blur group-[.menu-open]:z-50 group-[.menu-open]:flex sm:static sm:z-auto sm:flex-row sm:items-center sm:rounded-none sm:bg-transparent sm:shadow-none sm:backdrop-blur-none md:flex"
				id="main-navigation-menu"
			>	
				

				<!-- Ссылки меню -->
				{
					menuLinks.map((link) => (
						<a
							aria-current={Astro.url.pathname === link.path ? "page" : false}
							class="underline-offset-2 hover:underline"
							data-astro-prefetch
							href={link.path}
						>
							{link.title}
						</a>
					))
				}
				
				
				
				
			</nav>
			
			
			<div class="flex">
				<div id="buttons-panel" class="top-4 md:top-8 flex">
					<Search />
					<ColorPalet client:only/>
					<ThemeToggle />
					<a class="link" href="/admin/index.html">
					<Icon  name="ri:admin-line" class="h-7 w-7 rounded-lg drop-shadow-[0px_1.5px_1.5px_rgba(0,0,0,0.175)] hover:text-accent-two" />
					</a>
					
				</div>
				
			</div>	
			
			
		</div>
	</div>
</header>

<div id="drawer" class="fixed inset-0 z-10 hidden" aria-hidden="true">
	<div
		id="drawer-body"
		class="absolute inset-0 -translate-y-full transform bg-bgColor transition-all duration-300 ease-in-out"
	>
		
		
		<nav
			aria-label="Mobile navigation menu"
			class="text-lg absolute inset-0 flex flex-col items-center justify-center gap-y-4 text-center font-medium text-accent-two"
			id="nav-menu-mobile"
		>
			<!-- Ссылки меню -->
			{
				menuLinks.map((link) => (
					<a
						aria-current={Astro.url.pathname === link.path ? "page" : false}
						class="underline-offset-2 hover:underline"
						data-astro-prefetch
						href={link.path}
					>
						{link.title}
					</a>
				))
			}
			
		</nav>
	</div>
</div>

<script>
	document.addEventListener("DOMContentLoaded", () => {
		const toggleNavMenuMobileButton = document.getElementById("toggle-nav-menu-mobile");
		const openMenuIcon = document.getElementById("open-nav-menu-icon");
		const closeMenuIcon = document.getElementById("close-nav-menu-icon");
		const drawer = document.getElementById("drawer");

		// Проверяем существование элементов
		if (!toggleNavMenuMobileButton || !openMenuIcon || !closeMenuIcon || !drawer) {
			console.error("One or more required elements are missing in the DOM.");
			return;
		}

		const drawerBody = document.getElementById("drawer-body");
		if (!drawerBody) {
			console.error("Drawer body element is missing in the DOM.");
			return;
		}

		toggleNavMenuMobileButton.addEventListener("click", () => {
			const isOpen = toggleNavMenuMobileButton.getAttribute("aria-expanded") === "true";

			if (isOpen) {
				// Закрываем меню
				drawerBody.classList.add("opacity-0", "-translate-y-full");
				drawerBody.classList.remove("translate-y-0");

				// Убираем после анимации
				setTimeout(() => {
					drawer.classList.add("hidden");
				}, 300);

				// Меняем иконки
				openMenuIcon.classList.add("scale-100", "opacity-100");
				closeMenuIcon.classList.add("scale-0", "opacity-0");
				closeMenuIcon.classList.remove("scale-100", "opacity-100");
			} else {
				// Показываем меню
				drawer.classList.remove("hidden");
				drawerBody.classList.add("translate-y-0");
				drawerBody.classList.remove("opacity-0", "-translate-y-full");

				// Меняем иконки
				openMenuIcon.classList.add("scale-0", "opacity-0");
				closeMenuIcon.classList.add("scale-100", "opacity-100");
				openMenuIcon.classList.remove("scale-100", "opacity-100");
			}

			// Обновляем состояние кнопки
			toggleNavMenuMobileButton.setAttribute("aria-expanded", (!isOpen).toString());
		});
	});
</script>



